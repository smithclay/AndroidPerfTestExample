
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
        classpath "com.newrelic.agent.android:agent-gradle-plugin:5.+"
        classpath 'com.amazonaws:aws-devicefarm-gradle-plugin:1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'newrelic'
apply plugin: 'devicefarm'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'com.newrelic.agent.android:android-agent:5.+'
    compile "com.android.support:support-v4:23.3.0"
    compile "com.android.support:gridlayout-v7:23.3.0"
    compile "com.android.support:cardview-v7:23.3.0"
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process


android {
    compileSdkVersion 23
    buildToolsVersion "24.0.0 rc3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 23
    }

    productFlavors {
        prod {
            buildConfigField "String", "NEWRELIC_TOKEN", "AA86306d05a11be432d9edc83985f86c8e1656bb38"
        }
        zPref {
            buildConfigField "String", "NEWRELIC_TOKEN", "AA3bb1c6bf2fb0ed555cd7f7149dc9e83d7032343a"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']
    }
}

devicefarm {
    // The project must already exist!
    projectName "NetworkConnect"

    authentication {
        accessKey System.env.AWS_ACCESS_KEY_ID
        secretKey System.env.AWS_SECRET_ACCESS_KEY
    }

    appexplorer {}
}
